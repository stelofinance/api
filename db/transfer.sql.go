// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: transfer.sql

package db

import (
	"context"
	"time"
)

const insertTransfer = `-- name: InsertTransfer :one
INSERT INTO transfer (created_at, status, sending_warehouse_id, receiving_warehouse_id) VALUES ($1, $2, $3, $4) RETURNING id
`

type InsertTransferParams struct {
	CreatedAt            time.Time      `json:"created_at"`
	Status               TransferStatus `json:"status"`
	SendingWarehouseID   int64          `json:"sending_warehouse_id"`
	ReceivingWarehouseID int64          `json:"receiving_warehouse_id"`
}

func (q *Queries) InsertTransfer(ctx context.Context, arg InsertTransferParams) (int64, error) {
	row := q.db.QueryRow(ctx, insertTransfer,
		arg.CreatedAt,
		arg.Status,
		arg.SendingWarehouseID,
		arg.ReceivingWarehouseID,
	)
	var id int64
	err := row.Scan(&id)
	return id, err
}
